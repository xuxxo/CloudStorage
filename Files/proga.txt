class Program
    {
        static void Main()
        {
			int n = 3;
			int[,] matrix = new int[n,n];
			matrix[0, 0] = 1; matrix[0, 1] = 1; matrix[0, 2] = 1;
			matrix[1, 0] = 1; matrix[1, 1] = 1; matrix[1, 2] = 1;
			matrix[2, 0] = 1; matrix[2, 1] = 1; matrix[2, 2] = 1;
			List<int> deg = new() { 0,0,0};
			for (int i = 0; i < n; ++i)
				for (int j = 0; j < n; ++j)
					deg[i] += matrix[i,j];

			int first = 0;

			while (deg[first] == 0) 
				++first;

			int v1 = -1, v2 = -1;
			bool bad = false;
			for (int i = 0; i < n; ++i)
				if (deg[i] != 0)
					if (v1 == -1)
						v1 = i;
					else if (v2 == -1)
						v2 = i;
					else
						bad = true;

			if (v1 != -1)
            {
				++matrix[v1, v2];
				++matrix[v2, v1];
			}


			Stack<int> st = new();
			st.Push(first);
			List<int> res = new();
			while (st.Count != 0)
			{
				int v = st.Peek();
				int i;
				for (i = 0; i < n; ++i)
					if (matrix[v,i] != 0)
						break;
				if (i == n)
				{
					res.Add(v);
					st.Pop();
				}
				else
				{
					--matrix[v,i];
					--matrix[i,v];
					st.Push(i);
				}
			}

			if (v1 != -1)
				for (int i = 0; i + 1 < res.Count; ++i)
					if (res[i] == v1 && res[i + 1] == v2 || res[i] == v2 && res[i + 1] == v1)
					{
						List<int> res2 = new();
						for (int j = i + 1; j < res.Count; ++j)
							res2.Add(res[j]);
						for (int j = 1; j <= i; ++j)
							res2.Add(res[j]);
						res = res2;
						break;
					}

			for (int i = 0; i < n; ++i)
				for (int j = 0; j < n; ++j)
					if (matrix[i,j] != 0)
						bad = true;

			if (bad)
				Console.WriteLine("-1");
			else
				for (int i = 0; i < res.Count; ++i)
					Console.WriteLine(res[i] + 1 + " "); 
        }
    }